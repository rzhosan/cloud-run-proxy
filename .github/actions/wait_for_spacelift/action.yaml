name: Wait for Spacelift
description: Wait for a Spacelift check to complete before proceeding with the workflow

inputs:
  spacelift_check_name:
    required: true
    description: The name of the Spacelift check to wait for
  max_minutes_to_wait:
    required: false
    description: The maximum number of minutes to wait for the check to complete
    default: "10"
  github_token:
    description: "The GitHub token to use for authentication"
    required: true

runs:
  using: "composite"
  steps:
    - name: Wait for check runs to complete
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const checkName = "${{ inputs.spacelift_check_name }}";
          const timeout = 1000 * 60 * ${{ inputs.max_minutes_to_wait }};
          const start = Date.now();

          while (Date.now() - start < timeout) {
            const { data: { check_runs: checkRuns } } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
            });

            const matchingCheck = checkRuns.find(check => check.name.startsWith(checkName));

            if (matchingCheck) {
                if (matchingCheck.status === "completed") {
                    console.log(`Check ${matchingCheck.name} has completed. Proceeding with the workflow...`);
                    return;
                } else {
                    console.log(`Check ${matchingCheck.name} has not completed yet. Waiting till it's completed...`);
                }
            } else {
                console.log(`Check ${checkName} not found yet. Waiting till it's created...`);
            }

            await new Promise(resolve => setTimeout(resolve, 10000));
          }

          console.log("Timeout reached. Not all checks have completed yet. Proceeding anyway...");
